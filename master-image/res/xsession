#!/bin/sh

set -ex

export svc_controller="${INSTANCE_PREFIX}-${INSTANCE_NAME}-rest"
export svc_vnc="${INSTANCE_PREFIX}-${INSTANCE_NAME}-x11"

export DISPLAY="${svc_vnc}:1"

file_status="/mnt/shared/instance-status"
file_log="/mnt/shared/instance.log"

# Wait for the xorg (vnc container) (existency of xauthority means that xserver in the vnc container is running)
while [ ! -f /mnt/shared/.Xauthority ]; do
    sleep 2
done
# set target to the shared xauthority and extract cookie
export XAUTHORITY=/mnt/shared/.Xauthority
x11_cookie="$(echo $(xauth list) | awk '{print $3}')"
# set target to the correct path of the local xauthority and create new entry with the cookie
export XAUTHORITY=${S_USER_HOME}/.Xauthority
xauth add "${DISPLAY}" "MIT-MAGIC-COOKIE-1" "${x11_cookie}"

# Opens xterm with a tail the logs. Is is useful before running the desktop environment to prevent user from doing any actions, but show him the instance log
while true; do
    xterm -bg black -fg gray -fa 'Monospace' -fs 11 -maximized -xrm 'XTerm.vt100.allowTitleOps: false' -T "Instance logs" -e /bin/bash -c "while true; do ls ${file_log} > /dev/null 2>&1; tail -f -n +1 ${file_log} 2> /dev/null | grep -v '200 OK' || echo 'Waiting for the controller...'; sleep 10; clear; done"
done &

# Wait for the "run" phase of the controller - cloners ("clone" - clone dataset data, "restore" - restore project)
while [ ! "$(curl ${svc_controller}:8000/phase)" = '{"phase":"run"}' ]; do
    sleep 5
done

# Disable screensaver
#xset s off -dpms

# Start xfce4
cd ${S_USER_HOME}
xfce4-session &

# minimize the xterm
sleep 3
xdotool getactivewindow windowminimize || true
