[localhost]
PARALLEL_COMMAND = mpirun -np %_(JOB_NODES)d %_(COMMAND)s
NAME = KUBERNETES
MANDATORY = False
SUBMIT_COMMAND = bash %_(JOB_SCRIPT)s
SUBMIT_TEMPLATE = #!/bin/bash
    echo $$
    echo '%_(JOB_COMMAND)s' >> /home/scipionuser/Desktop/job-cmd.txt
    echo "job name - %_(JOB_NAME)s"
    echo "script begin"

    ### Set environment variable to know running mode is non interactive
    #export XMIPP_IN_QUEUE=1


    echo "/home/scipionuser/scipion3/scipion3 run %_(JOB_COMMAND)s"
    #/home/scipionuser/scipion3/scipion3 run %_(JOB_COMMAND)s >> /home/scipionuser/Desktop/job-cmd-out.log 2>&1 &
    
    export TOOL_SUBST_COMMAND="%_(JOB_COMMAND)s"
    export TOOL_SUBST_NAME="%_(JOB_NAME)s"
    export TOOL_SUBST_TOOL="%_(JOB_TOOL)s"
    export SUBMIT_PID=$$
    #envsubst < /opt/k8s/depl-tool.yaml | if [ "%_(REQUIRES_GPU)s" == "True" ]; then sed '/cerit.io\/gpu.mem/s/^#//'; else cat; fi | kubectl apply -f - | cut -d' ' -f1 > /home/scipionuser/Desktop/jobs.txt
    JOB_ID=$(envsubst < /opt/k8s/depl-tool.yaml | if [ "%_(REQUIRES_GPU)s" == "True" ]; then sed '/cerit.io\/gpu.mem/s/^#//'; else cat; fi | kubectl apply -f - | cut -d' ' -f1)
    nohup /opt/k8s/job-watchdog.sh </dev/null &>/dev/null "$JOB_ID" &

    #kubectl apply -f /opt/k8s/depl-tool.yaml -e TOOL_SCRIPT="%_(JOB_COMMAND)s"

    echo "script end"
    echo $$

CANCEL_COMMAND = export id="%_(JOB_ID)s" && export name=`kubectl get job | grep "scipion-tool-job" | grep "$id" | cut -d"-" -f4` && kubectl delete job "scipion-tool-job-$name-$id"
CHECK_COMMAND = touch /home/scipionuser/Desktop/check-%_(JOB_ID)s

QUEUES = { "default": {} }
