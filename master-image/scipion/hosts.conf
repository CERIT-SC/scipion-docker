[localhost]
PARALLEL_COMMAND = mpirun -np %_(JOB_NODES)d %_(COMMAND)s
NAME = KUBERNETES
MANDATORY = 1
SUBMIT_COMMAND = bash %_(JOB_SCRIPT)s
SUBMIT_TEMPLATE = #!/bin/bash
    echo $$

    ### Set environment variable to know running mode is non interactive
    #export XMIPP_IN_QUEUE=1
    # This option is probably not required due to working X11 forwarding
    export XMIPP_IN_QUEUE=0

    # TODO tmp workaround (problem with missing absolute path to the project)
    job_script="%_(JOB_SCRIPT)s"
    job_workdir=$(echo $job_script | sed 's/\(\/mnt\/vol-project\/[^/]*\/\).*/\1/')

    K8S_JOB_ID=$(helm template \
        --set instance.namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace) \
        --set instance.name="$INSTANCE_NAME" \
        --set instance.release_channel="$RELEASE_CHANNEL" \
        --set instance.submitpid="$$" \
        --set job.name="%_(JOB_NAME)s" \
        --set job.command="%_(JOB_COMMAND)s" \
        --set job.workdir="$job_workdir" \
        --set job.xmipp_in_queue="$XMIPP_IN_QUEUE" \
        --set od.sid.dataset="$OD_DATASET_SPACEID" \
        --set od.sid.project="$OD_PROJECT_SPACEID" \
        --set instance.mincpu="%_(JOB_THREADS)d" \
        --set instance.maxcpu="%_(JOB_THREADS)d" \
        /opt/kubernetes/chart-tool/ | kubectl apply -f - | cut -d' ' -f1)

    nohup /opt/scipion/job-watchdog.sh </dev/null &>/dev/null "$K8S_JOB_ID" &

    echo $$

CANCEL_COMMAND = #!/bin/bash
    export job_id="%_(JOB_ID)s"
    # scipion's var JOB_NAME does not work in the cancel cmd
    export job_name=`kubectl get job | grep "scipion-tool-$INSTANCE_NAME" | grep "$job_id" | cut -d"-" -f5`

    kubectl delete job "scipion-tool-$INSTANCE_NAME-$job_name-$job_id"

CHECK_COMMAND =  #!/bin/bash
    j_dir="/mnt/shared/jobs/"
    mkdir -p "$j_dir"
    j_file=$(ls "$j_dir" | grep "$INSTANCE_NAME" | grep "%_(JOB_ID)s")

    if [ -z "$j_file" ]; then
        echo -n "error"
    fi

    j_path="${j_dir}/${j_file}"

    if [ -f "$j_path" ] && [ "$(cat $j_path)" = "done" ]; then
        echo -n ""
        exit 0
    else
        echo -n "error"
    fi

QUEUES = {
    "kubernetes-queue": [
        ["JOB_MEMORY", "4", "Memory (GiB)", "Select amount of memory (in gibibytes) for this job."]
    ],
    "queue": [
        ["QUEUE_FOR_JOBS", "N", "QUEUE_FOR_JOBS", "QUEUE_FOR_JOBS"]
    ] }
