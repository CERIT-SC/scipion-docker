tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: >
  Launch a cluster with Scipion via VNC

metadata:
  display_name: Scipion on SLURM cluster
  icon: images/scipion.png
  tag: beta

topology_template:

  inputs:
    vnc_pass:
      type: string
      description: VNC password
      required: yes
      default: Scipion4u
    master_instance_type:
      type: string
      description: Instance type of Scipion master node
      required: yes
      default: 'standard.medium'
    worker_instance_type:
      type: string
      description: Instance type of Scipion worker node
      required: yes
      default: 'hpc.8core-64ram-nvidia-1080-glados'
    disk_size:
      type: scalar-unit.size
      description: Size of the disk to be attached to the FE instance
      default: 100 GB
      constraints:
        - valid_values: [ 100 GB, 500 GB, 1 TB, 5 TB, 8TB ]

  node_templates:

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Slurm
      properties:
        wn_ips: { get_attribute: [ lrms_wn, private_address ] }
      requirements:
        - host: lrms_server

      lrms_server:
        type: tosca.nodes.indigo.Compute
        capabilities:
          endpoint:
            properties:
              network_name: PUBLIC
              ports:
                ssh_port:
                  protocol: tcp
                  source: 22
                vnc_port:
                  protocol: tcp
                  source: 5904
          host:
            properties:
              instance_type: { get_input: master_instance_type }
          os:
            properties:
              image: 'ost://identity.cloud.muni.cz/bb3e9951-5a39-4f5a-8b5c-2e3b9d5f8413'
              type: linux

        requirements:
          - local_storage:
              node: my_block_storage
              relationship:
                type: AttachesTo
                properties:
                  location: /home/scipionuser/ScipionUserData

    scipion_master:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: lrms_server
        - dependency: lrms_front_end
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/CERIT-SC/scipion-docker/slurm/ansible_master.yaml
            inputs:
              vnc_pass: { get_input: vnc_pass }

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Slurm
      properties:
        front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
        public_front_end_ip: { get_attribute: [ lrms_server, public_address, 0 ] }
      requirements:
        - host: lrms_wn

    lrms_wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        host:
          properties:
            instance_type: { get_input: worker_instance_type }
        os:
          properties:
            image: 'ost://identity.cloud.muni.cz/bb3e9951-5a39-4f5a-8b5c-2e3b9d5f8413'

    scipion_wn:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: lrms_wn
        - dependency: wn_node
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/CERIT-SC/scipion-docker/slurm/ansible_worker.yaml

    my_block_storage:
      type: BlockStorage
      properties:
        size: { get_input: disk_size }

  outputs:
    master_node_ip:
      value: { concat: [ 'https://', get_attribute: [ master_node, public_address, 0 ], ':5904/?resize=remote' ] }