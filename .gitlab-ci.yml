image: docker:latest

services:
  - docker:dind

before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

stages:
  - build_base_image
  - build_node_image

.build_image:
  script: &build_image
    # replace tag for a base image with branch name
    # IF "node" build stage
    - |
        if [ "${BUILD_STAGE}" = "node" ]; then
            sed -i -E "s/^FROM\s+(.+):.+$/FROM \1:${CI_COMMIT_REF_NAME}/" ${NODE_TYPE}/Dockerfile
        fi

    # add priv key for the MN
    # IF "master-image" node image
    - |
        if [ "${NODE_TYPE}" = "master-image" ]; then
            echo "$PRIV_KEY" > master-image/self.pem;
        fi

    # build and push the base-image / MN-image / WN-image
    - docker build --pull --cache-from ${CI_REGISTRY_IMAGE}/${NODE_TYPE}:${CI_COMMIT_REF_NAME} -t "${CI_REGISTRY_IMAGE}/${NODE_TYPE}:${CI_COMMIT_REF_NAME}" ${NODE_TYPE}/.
    - docker push "${CI_REGISTRY_IMAGE}/${NODE_TYPE}:${CI_COMMIT_REF_NAME}"

    # build and tag the image for master branch also with the string "latest"
    # IF "master" branch
    - |
        if [ "${CI_COMMIT_REF_NAME}" = "master" ]; then
            docker build --pull -t "${CI_REGISTRY_IMAGE}/${NODE_TYPE}:latest" ${NODE_TYPE}/.
            docker push "${CI_REGISTRY_IMAGE}/${NODE_TYPE}:latest"
        fi

build_base_image:
  stage: build_base_image
  variables:
    NODE_TYPE: base-image
    BUILD_STAGE: base
  script:
    *build_image
  only:
    - master
    - dev

build_master_image:
  stage: build_node_image
  variables:
    NODE_TYPE: master-image
    BUILD_STAGE: node
  script:
    *build_image
  only:
    - master
    - dev

build_worker_image:
  stage: build_node_image
  variables:
    NODE_TYPE: worker-image
    BUILD_STAGE: node
  script:
    *build_image
  only:
    - master
    - dev

