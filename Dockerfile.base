
FROM nvidia/cudagl:11.4.2-runtime-ubuntu20.04

ENV S_USER=scipionuser
ENV S_USER_HOME=/home/${S_USER}
ENV BUILD_HOME_PATH=base-image

ENV DEBIAN_FRONTEND noninteractive

# Install necessary packages
RUN apt update && apt install -y --no-install-recommends \
        apt-utils \
        tzdata \
        bash \
        make \
        curl \
        wget \
        openssh-client \
        ca-certificates \
        python3 \
        bison \
        flex \
        git \
        gettext \
        strace \
        iputils-ping \
        nmap && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
# gettext - envsubst
# strace, nmap - for testing and debuging purpose

# Required by Scipion
RUN apt update && apt install -y --no-install-recommends \
        libxv1 \
        openjdk-8-jdk \
        libfftw3-dev \
        libtiff-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Required by Scipion for conda installation - basics
RUN apt update && apt install -y --no-install-recommends \
        sudo \
        wget \
        gcc-10 \
        g++-10 \
        mesa-utils \
        openssh-client \
        cmake \
        libnss3 \
        libfontconfig1 \
        libxrender1 \
        libxtst6 \
        xterm \
        libasound2 \
        libglu1 \
        libxcursor1 \
        libdbus-1-3 \
        libxkbcommon-x11-0 \
        libhdf5-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Required by Scipion for conda installation - MPI
RUN apt update && apt install -y --no-install-recommends \
        libopenmpi-dev \
        openmpi-bin \
        openmpi-common && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Add shared files
COPY shared-scripts /opt/shared-scripts
RUN chmod -R +x /opt/shared-scripts/

# Create scipionuser
RUN /opt/shared-scripts/build/add-user.sh

ENV CUDA_HOME "/usr/local/cuda"
#ENV PATH "${CUDA_HOME}/bin:$PATH"
ENV CUDA_BIN "/usr/local/cuda/bin"

ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_VISIBLE_DEVICES=0
ENV CUDA_VISIBLE_DEVICES=0

# Prepare working directory
RUN /opt/shared-scripts/build/prepare-workdir.sh

COPY ${BUILD_HOME_PATH}/docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh

USER ${S_USER}
#######################

RUN ["/bin/bash", "-c", "echo $CUDA_HOME"]
RUN ["/bin/bash", "-c", "echo $PATH"]

# Install Scipion
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ${S_USER_HOME}/miniconda.sh
RUN bash ${S_USER_HOME}/miniconda.sh -b
RUN ${S_USER_HOME}/miniconda3/bin/conda init
RUN ["/bin/bash", "-ci" , "python3 -m pip install scipion-installer"]
RUN ["/bin/bash", "-ci" , "cd ${S_USER_HOME} && python3 -m scipioninstaller ${S_USER_HOME}/scipion3 -noAsk -noXmipp -j $(nproc)"]

USER root
#######################

COPY ${BUILD_HOME_PATH}/res/scipion.conf ${S_USER_HOME}/scipion3/config/scipion.conf
RUN chown ${S_USER}:${S_USER} ${S_USER_HOME}/scipion3/config/scipion.conf

USER ${S_USER}
#######################

RUN ln -s ${S_USER_HOME}/ScipionUserData/projects ${S_USER_HOME}/scipion3/data
#RUN /home/scipionuser/scipion3/scipion3 installp -p scipion-em-xmipp -j $(nproc)

ENV PATH "${PATH}:/home/scipionuser/scipion3"

# Disable conda auto activation
RUN ${S_USER_HOME}/miniconda3/bin/conda config --set auto_activate_base false

USER ${S_USER}
#######################

ENTRYPOINT ["bash"]

