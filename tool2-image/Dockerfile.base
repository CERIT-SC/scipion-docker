# cannot compile xmipp using "runtime" image
FROM nvidia/cudagl:10.2-devel-ubuntu18.04
#FROM nvidia/cudagl:11.4.2-devel-ubuntu18.04

ENV S_USER=scipionuser
ENV S_USER_HOME=/home/${S_USER}

# temporary workaround
# https://developer.download.nvidia.com/compute/cuda/repos/
RUN apt-key del 7fa2af80
RUN rm /etc/apt/sources.list.d/cuda.list
RUN rm /etc/apt/sources.list.d/nvidia-ml.list || true

RUN apt update && apt upgrade -y

RUN apt update && DEBIAN_FRONTEND="noninteractive" apt install -y --no-install-recommends \
	apt-utils \
	tzdata

# Install necessary packages
RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \
	bash \
	make \
	curl \
	wget \
	ca-certificates \
	python3 \
    python3-future

# Usefull debug tool
RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \
	strace \
	nmap \
	htop \
	vim

# gettext - envsubst
# cuda-samples, strace, nmap - for testing and debuging purpose

# temporary workaround
# https://developer.download.nvidia.com/compute/cuda/repos/
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb && \
    dpkg -i cuda-keyring_1.0-1_all.deb && \
    rm cuda-keyring_1.0-1_all.deb

RUN rm /usr/local/cuda && ln -s /usr/local/cuda-10.2 /usr/local/cuda

# Another MPI requirements
RUN apt install -y --no-install-recommends libopenmpi-dev libopenmpi2 openmpi-bin openmpi-common openssh-client

# Clean apt
RUN rm -rf /var/lib/apt/lists/*

# Create scipionuser
RUN groupadd --gid 1000 ${S_USER} && \
	useradd --uid 1000 --create-home --home-dir ${S_USER_HOME} -s /bin/bash -g ${S_USER} ${S_USER} && \
	usermod -aG sudo ${S_USER} && \
	chown -R ${S_USER}:${S_USER} ${S_USER_HOME}

ENV CUDA_HOME "/usr/local/cuda"
#ENV PATH "${CUDA_HOME}/bin:$PATH"
ENV CUDA_BIN "/usr/local/cuda/bin"

ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
ENV NVIDIA_VISIBLE_DEVICES=all
ENV CUDA_VISIBLE_DEVICES=all

# prepare working directory
RUN mkdir ${S_USER_HOME}/ScipionUserData && \
    chown -R ${S_USER}:${S_USER} ${S_USER_HOME}/ScipionUserData && \
    chown -R ${S_USER}:${S_USER} /mnt

COPY docker-entrypoint-base.sh /
RUN chmod +x /docker-entrypoint-base.sh
COPY docker-entrypoint.sh /
RUN chmod +x /docker-entrypoint.sh

RUN ln -s /usr/bin/python3.6 /usr/bin/python

RUN mkdir /scipion-tool && \
        chown -R ${USER}:${USER} /scipion-tool

USER ${S_USER}
#######################

RUN ["/bin/bash", "-c", "echo $CUDA_HOME"]
RUN ["/bin/bash", "-c", "echo $PATH"]

RUN mkdir ${S_USER_HOME}/scipion3 && \
    ln -s ${S_USER_HOME}/ScipionUserData/projects ${S_USER_HOME}/scipion3/data

#USER ${S_USER}
USER root
#######################
